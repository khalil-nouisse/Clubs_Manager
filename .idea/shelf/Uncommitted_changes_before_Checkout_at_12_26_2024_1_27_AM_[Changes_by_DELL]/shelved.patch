Index: src/main/java/com/ensam/Controllers/Admin/ManagerPageController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.ensam.Controllers.Admin;\r\n\r\nimport com.ensam.Backend.database.CLubDb;\r\nimport com.ensam.Backend.model.Club;\r\nimport com.ensam.Backend.model.data;\r\nimport com.ensam.Controllers.AppUtils;\r\nimport com.ensam.Controllers.HomeController;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.collections.transformation.FilteredList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.stage.FileChooser;\r\nimport javafx.stage.Stage;\r\nimport java.awt.*;\r\nimport java.awt.desktop.OpenFilesEvent;\r\nimport java.io.File;\r\nimport java.net.URL;\r\nimport java.util.*;\r\nimport java.util.List;\r\nimport static com.ensam.Backend.database.CLubDb.clubExist;\r\n\r\npublic class ManagerPageController implements Initializable {\r\n\r\n\r\n    @FXML\r\n    private Button about_btn;\r\n\r\n    @FXML\r\n    private Button home_btn;\r\n\r\n    @FXML\r\n    private AnchorPane main_form;\r\n\r\n    @FXML\r\n    private Button manager_addBtn;\r\n\r\n    @FXML\r\n    private Button manager_btn;\r\n\r\n    @FXML\r\n    private TableColumn<Club,String> manager_club_category;\r\n\r\n    @FXML\r\n    private TableColumn<Club,String> manager_club_description;\r\n\r\n    @FXML\r\n    private TableColumn<Club,String> manager_club_id;\r\n\r\n    @FXML\r\n    private TableColumn<Club,String> manager_club_name;\r\n\r\n    @FXML\r\n    private TableColumn<Club,String> manager_club_state;\r\n\r\n    @FXML\r\n    private TableView<Club> manager_club_table;\r\n\r\n    @FXML\r\n    private Button manager_delBtn;\r\n\r\n    @FXML\r\n    private AnchorPane manager_form;\r\n\r\n    @FXML\r\n    private Button manager_importBtn;\r\n\r\n    @FXML\r\n    private Button signout_btn;\r\n\r\n    @FXML\r\n    private ComboBox<String> manager_add_clubCategory;\r\n\r\n    @FXML\r\n    private TextField manager_add_clubDescription;\r\n\r\n    @FXML\r\n    private TextField manager_add_clubName;\r\n\r\n    @FXML\r\n    private ComboBox<?> manager_add_clubState;\r\n\r\n    @FXML\r\n    private ImageView manager_add_image;\r\n\r\n    @FXML\r\n    private TextField manager_searchBar;\r\n\r\n    Alert alert;\r\n    CLubDb clubDb = new CLubDb();\r\n    private  Image image;\r\n    HomeController homeController ;\r\n    // category list in the manager page !\r\n    String []categoryList = {\"Technical\" , \"Art & Culture\" , \"Entrepreneurship\" , \"Creation\"};\r\n    public void setManager_club_category(){\r\n\r\n        List<String> categoryL = new ArrayList<>() ;\r\n        Collections.addAll(categoryL ,categoryList);\r\n        ObservableList category = FXCollections.observableArrayList(categoryL);\r\n        manager_add_clubCategory.setItems(category);\r\n\r\n    }\r\n    //state list in the manager page\r\n    private String []stateListe = {\"Active\" ,\"Inactive \"} ;\r\n    public void setManager_club_state(){\r\n        List <String> stateL = new ArrayList<>() ;\r\n        Collections.addAll(stateL , stateListe);\r\n        ObservableList state = FXCollections.observableArrayList(stateL);\r\n        manager_add_clubState.setItems(state);\r\n    }\r\n    //Show off the manager page table\r\n    private ObservableList<Club> managerListData ;\r\n    public void managerShowData(){\r\n\r\n        managerListData = clubDb.selectClubsFromDb();\r\n\r\n        manager_club_id.setCellValueFactory(new PropertyValueFactory<>(\"clubID\"));\r\n        manager_club_name.setCellValueFactory(new PropertyValueFactory<>(\"clubName\"));\r\n        manager_club_category.setCellValueFactory(new PropertyValueFactory<>(\"clubCategory\"));\r\n        manager_club_state.setCellValueFactory(new PropertyValueFactory<>(\"clubState\"));\r\n        manager_club_description.setCellValueFactory(new PropertyValueFactory<>(\"clubDescription\"));\r\n\r\n\r\n        manager_club_table.setItems(managerListData);\r\n    }\r\n\r\n\r\n    //add club button\r\n    public void managerAddClub(ActionEvent event){\r\n\r\n        //if the user didn't fill the data\r\n        if(manager_add_clubName.getText().isEmpty()\r\n                || manager_add_clubCategory.getSelectionModel().isEmpty()\r\n                || manager_add_clubState.getSelectionModel().isEmpty()\r\n                || manager_add_clubDescription.getText().isEmpty()\r\n                || data.path == null){\r\n            alert = new Alert(Alert.AlertType.ERROR);\r\n            alert.setTitle(\"Error Message\");\r\n            alert.setHeaderText(null);\r\n            alert.setContentText(\"Please fill all club informations\");\r\n            alert.showAndWait();\r\n        }\r\n        else{       //if the user filled all the data\r\n            try {\r\n                //check if club already exists in the database\r\n                if(clubExist(manager_add_clubName.getText())){\r\n                    alert = new Alert(Alert.AlertType.ERROR);\r\n                    alert.setTitle(\"Error Message\");\r\n                    alert.setHeaderText(\"Club exist already\");\r\n                    alert.setContentText(\"this CLub already exist !\");\r\n                    alert.showAndWait();\r\n                }\r\n                else {\r\n\r\n                    //add club\r\n                    clubDb.saveClubToDatabase(manager_add_clubName.getText()\r\n                            , (String) manager_add_clubCategory.getSelectionModel().getSelectedItem()\r\n                            , (String) manager_add_clubState.getSelectionModel().getSelectedItem()\r\n                            , manager_add_clubDescription.getText()\r\n                            , data.path);\r\n\r\n                    //homeController.put_logo(data.path);\r\n                    //homeController.put_logo(data.path);\r\n\r\n                    alert = new Alert(Alert.AlertType.INFORMATION);\r\n                    alert.setTitle(\"Information Message\");\r\n                    alert.setHeaderText(null);\r\n                    alert.setContentText(\"Succesfully added club!\");\r\n                    alert.showAndWait();\r\n\r\n                    // Reload the clubs table data\r\n                    managerShowData();\r\n\r\n                    //initialize the data boxes\r\n                    manager_add_clubName.setText(\"\");\r\n                    manager_add_clubCategory.getSelectionModel().clearSelection();\r\n                    manager_add_clubState.getSelectionModel().clearSelection();\r\n                    manager_add_clubDescription.setText(\"\");\r\n                    manager_add_image.setImage(null);\r\n                }\r\n            }\r\n            catch (Exception e){\r\n                System.out.println(\"Error adding club to database!\");\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n    //manager impot image button\r\n    public void managerImportBtn(ActionEvent e){\r\n        FileChooser openFile = new FileChooser();\r\n        openFile.getExtensionFilters().add(new FileChooser.ExtensionFilter(\"Open Image File \",\"*png\",\"*jpg\"));\r\n        File file  = openFile.showOpenDialog(main_form.getScene().getWindow());\r\n        if(file != null){\r\n            data.path = file.getAbsolutePath();\r\n            image = new Image(file.toURI().toString(), 120, 127, false, true);\r\n\r\n            manager_add_image.setImage(image);\r\n        }\r\n    }\r\n    //delete club button\r\n    public void managerDeleteClub(ActionEvent e){\r\n\r\n        if(manager_add_clubName.getText().isEmpty()){      //in case the name of the club to delete not available\r\n            alert = new Alert(Alert.AlertType.ERROR);\r\n            alert.setTitle(\"Error Message\");\r\n            alert.setHeaderText(null);\r\n            alert.setContentText(\"Enter the club name !\");\r\n            alert.showAndWait();\r\n        }\r\n        else {                                            //delete og the club\r\n            //confirmation message !\r\n            alert = new Alert(Alert.AlertType.CONFIRMATION);\r\n            alert.setTitle(\"Confirmation\");\r\n            alert.setHeaderText(\"Delete Club Confirmation\");\r\n            alert.setContentText(\"Are you sure you want to delete the club?\");\r\n\r\n            //control the choice\r\n            Optional<ButtonType> option = alert.showAndWait() ;\r\n            if (option.get().equals(ButtonType.OK)) {         //confirm exit\r\n                clubDb.deleteClubFromDb(manager_add_clubName.getText());\r\n                //intitialise the information area\r\n                manager_add_clubName.setText(\"\");\r\n                manager_add_clubCategory.getSelectionModel().clearSelection();\r\n                manager_add_clubState.getSelectionModel().clearSelection();\r\n                manager_add_clubDescription.setText(\"\");\r\n                // Reload the clubs table data\r\n                managerShowData();\r\n            }\r\n        }\r\n    }\r\n\r\n    public void managerClearDataBtn(){\r\n        manager_add_clubName.setText(\"\");\r\n        manager_add_clubCategory.getSelectionModel().clearSelection();\r\n        manager_add_clubState.getSelectionModel().clearSelection();\r\n        manager_add_clubDescription.setText(\"\");\r\n        manager_add_image.setImage(null);\r\n    }\r\n    public void managerSearchBar(ActionEvent e){\r\n\r\n        ObservableList<Club> clublist = FXCollections.observableArrayList();\r\n        CLubDb db = new CLubDb();\r\n        clublist = db.selectClubsFromDb();\r\n        // Create a FilteredList for dynamic filtering\r\n        FilteredList<Club> filteredClubs = new FilteredList<>(clublist, p -> true);\r\n        // Bind the FilteredList to the TableView\r\n        manager_club_table.setItems(filteredClubs);\r\n        // Add a listener to the search bar\r\n        manager_searchBar.textProperty().addListener((observable, oldValue, newValue) -> {\r\n            filteredClubs.setPredicate(club -> {\r\n                if (newValue == null || newValue.isEmpty()) {\r\n                    return true; // Show all clubs if the search bar is empty\r\n                }\r\n\r\n                String lowerCaseFilter = newValue.toLowerCase();\r\n                return club.getClubName().toLowerCase().contains(lowerCaseFilter);\r\n            });\r\n        });\r\n    }\r\n    //Sign out button\r\n    public void logout(ActionEvent event){\r\n        AppUtils.logout(event);\r\n    }\r\n\r\n\r\n    @FXML\r\n    private void goToHome(ActionEvent event) {\r\n        AppUtils.navigateTo(event, \"/Fxml/Home.fxml\", \"Home Page\");\r\n    }\r\n    /*@FXML\r\n    private void goToHome(ActionEvent event) {\r\n        try {\r\n            // Charger le fichier FXML de la page Home\r\n            FXMLLoader homeLoader = new FXMLLoader(getClass().getResource(\"/Fxml/Home.fxml\"));\r\n            Parent homeRoot = homeLoader.load();\r\n            HomeController homeController = homeLoader.getController();\r\n\r\n            // Charger le fichier FXML de la page Manager\r\n            FXMLLoader managerLoader = new FXMLLoader(getClass().getResource(\"/Fxml/Admin/managerPage.fxml\"));\r\n            Parent managerRoot = managerLoader.load();\r\n            ManagerPageController managerController = managerLoader.getController();\r\n\r\n            // Injecter le HomeController dans le ManagerPageController\r\n            managerController.setHomeController(homeController);\r\n\r\n            // Afficher la page Home\r\n            Stage currentStage = (Stage) ((javafx.scene.Node) event.getSource()).getScene().getWindow();\r\n            Scene scene = new Scene(homeRoot);\r\n            currentStage.setScene(scene);\r\n            currentStage.setTitle(\"Home Page\");\r\n            currentStage.show();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n     */\r\n\r\n    public void setHomeController(HomeController homeController) {\r\n        if (homeController != null) {\r\n            this.homeController = homeController;\r\n            System.out.println(\"HomeController successfully injected into ManagerPageController.\");\r\n        } else {\r\n            System.err.println(\"HomeController is null! Injection failed.\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    @FXML\r\n    private void goToAbout(ActionEvent event) {\r\n        AppUtils.navigateTo(event, \"/Fxml/About.fxml\", \"About Page\");\r\n    }\r\n\r\n    //initialize hthe manager home page !\r\n    @Override\r\n    public void initialize(URL url, ResourceBundle resourceBundle) {\r\n\r\n        manager_btn.setDisable(true);   //this one to make the manager button unclickable since it's already opened\r\n        setManager_club_category();\r\n        setManager_club_state();\r\n        managerShowData();\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/ensam/Controllers/Admin/ManagerPageController.java b/src/main/java/com/ensam/Controllers/Admin/ManagerPageController.java
--- a/src/main/java/com/ensam/Controllers/Admin/ManagerPageController.java	(revision 8f1fecf2891b86af479bd6fa7babca5a4232dcf9)
+++ b/src/main/java/com/ensam/Controllers/Admin/ManagerPageController.java	(date 1735169878805)
@@ -100,7 +100,13 @@
     Alert alert;
     CLubDb clubDb = new CLubDb();
     private  Image image;
-    HomeController homeController ;
+    HomeController homeController  ;
+
+    /*****
+    public void setHomeController(HomeController homeController) {
+        this.homeController = homeController;
+    }
+     *****/
     // category list in the manager page !
     String []categoryList = {"Technical" , "Art & Culture" , "Entrepreneurship" , "Creation"};
     public void setManager_club_category(){
@@ -169,8 +175,15 @@
                             , (String) manager_add_clubState.getSelectionModel().getSelectedItem()
                             , manager_add_clubDescription.getText()
                             , data.path);
+                    /**************************************/
+                    if(homeController != null) {
+                        homeController.put_logo(data.path);
+                    }
 
-                    //homeController.put_logo(data.path);
+                    else{
+                        System.out.println("homme controller is null !");
+                    }
+                    /*********************************/
                     //homeController.put_logo(data.path);
 
                     alert = new Alert(Alert.AlertType.INFORMATION);
